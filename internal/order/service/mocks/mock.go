// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	order "github.com/Egor-Pomidor-pdf/order-service/internal/order"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderServiceInterface is a mock of OrderServiceInterface interface.
type MockOrderServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceInterfaceMockRecorder
}

// MockOrderServiceInterfaceMockRecorder is the mock recorder for MockOrderServiceInterface.
type MockOrderServiceInterfaceMockRecorder struct {
	mock *MockOrderServiceInterface
}

// NewMockOrderServiceInterface creates a new mock instance.
func NewMockOrderServiceInterface(ctrl *gomock.Controller) *MockOrderServiceInterface {
	mock := &MockOrderServiceInterface{ctrl: ctrl}
	mock.recorder = &MockOrderServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderServiceInterface) EXPECT() *MockOrderServiceInterfaceMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockOrderServiceInterface) GetOrder(ctx context.Context, uid string) (*order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", ctx, uid)
	ret0, _ := ret[0].(*order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockOrderServiceInterfaceMockRecorder) GetOrder(ctx, uid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockOrderServiceInterface)(nil).GetOrder), ctx, uid)
}

// ProcessOrder mocks base method.
func (m *MockOrderServiceInterface) ProcessOrder(ctx context.Context, order order.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessOrder", ctx, order)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessOrder indicates an expected call of ProcessOrder.
func (mr *MockOrderServiceInterfaceMockRecorder) ProcessOrder(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessOrder", reflect.TypeOf((*MockOrderServiceInterface)(nil).ProcessOrder), ctx, order)
}
